'use client';

import Link from 'next/link';
import React, { useEffect, useMemo, useState } from 'react';

type Category = {
  slug: string;
  title: string;
  description: string;
  emoji: string;
  tint: string; // tailwind bg tint for icon bubble
};

const CATEGORIES: Category[] = [
  { slug: 'kidney-function',  title: '–§—É–Ω–∫—Ü—ñ—è –Ω–∏—Ä–æ–∫',         description: 'CKD-EPI, MDRD, Cockcroft‚ÄìGault', emoji: 'üßÆ', tint: 'bg-blue-100' },
  { slug: 'ckd-classification', title: '–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –•–•–ù',    description: 'KDIGO, KFRE, G/A staging',        emoji: 'üóÇÔ∏è', tint: 'bg-violet-100' },
  { slug: 'cardio-risk',       title: '–°–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω—ñ —Ä–∏–∑–∏–∫–∏', description: 'SCORE2/OP, QKidney, Charlson',  emoji: '‚ù§Ô∏è', tint: 'bg-rose-100' },
  { slug: 'nutrition',         title: '–ù—É—Ç—Ä–∏—Ç–∏–≤–Ω–∏–π —Å—Ç–∞—Ç—É—Å',    description: 'SGA, MIS, PEW',                  emoji: 'üçé', tint: 'bg-emerald-100' },
  { slug: 'dialysis',          title: '–î—ñ–∞–ª—ñ–∑',                description: 'Kt/V, URR, DSI',                  emoji: 'üíß', tint: 'bg-cyan-100' },
  { slug: 'qol',               title: '–Ø–∫—ñ—Å—Ç—å –∂–∏—Ç—Ç—è',          description: 'KDQOL-36, PDQLI-16, SF-36',      emoji: 'üôÇ', tint: 'bg-amber-100' },
  { slug: 'mental',            title: '–ü—Å–∏—Ö–æ–µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω',   description: 'BDI, HADS, GAD-7',               emoji: 'üß†', tint: 'bg-sky-100' },
  { slug: 'biomarkers',        title: '–ë—ñ–æ–º–∞—Ä–∫–µ—Ä–∏',            description: 'UACR, NGAL, Uromodulin',         emoji: 'üß™', tint: 'bg-lime-100' },
  { slug: 'other-scales',      title: '–Ü–Ω—à—ñ —à–∫–∞–ª–∏',            description: 'Oxford MEST-C, Renal Risk Score',emoji: 'üìè', tint: 'bg-zinc-100' },
];

export default function Home() {
  // ‚îÄ‚îÄ state
  const [query, setQuery]   = useState('');
  const [pinned, setPinned] = useState<string[]>([]);

  // ‚îÄ‚îÄ load/save pinned to localStorage
  useEffect(() => {
    try {
      const raw = localStorage.getItem('nephro:pinned');
      if (raw) setPinned(JSON.parse(raw));
    } catch {}
  }, []);
  useEffect(() => {
    try {
      localStorage.setItem('nephro:pinned', JSON.stringify(pinned));
    } catch {}
  }, [pinned]);

  // ‚îÄ‚îÄ helpers
  const togglePin = (slug: string) =>
    setPinned(p => (p.includes(slug) ? p.filter(s => s !== slug) : [...p, slug]));

  const filtered = useMemo(() => {
    const q = query.trim().toLowerCase();
    const base = q
      ? CATEGORIES.filter(c =>
          [c.title, c.description, c.slug].some(v => v.toLowerCase().includes(q))
        )
      : CATEGORIES.slice();

    // –ü—ñ–¥–Ω—ñ–º–∞—î–º–æ ¬´–æ–±—Ä–∞–Ω–µ¬ª –Ω–∞–≥–æ—Ä—É
    return base.sort((a, b) => {
      const ap = pinned.includes(a.slug) ? 1 : 0;
      const bp = pinned.includes(b.slug) ? 1 : 0;
      if (ap !== bp) return bp - ap;
      return a.title.localeCompare(b.title, 'uk');
    });
  }, [query, pinned]);

  const total = CATEGORIES.length;

  return (
    <main className="min-h-screen bg-gradient-to-br from-slate-50 to-white">
      {/* Header */}
      <section className="border-b bg-white/70 backdrop-blur supports-[backdrop-filter]:bg-white/50">
        <div className="mx-auto max-w-7xl px-6 py-8">
          <h1 className="text-3xl sm:text-4xl font-extrabold tracking-tight text-slate-900">
            –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ–≤ –¥–ª—è –Ω–µ—Ñ—Ä–æ–ª–æ–≥—ñ—ó
          </h1>
          <p className="mt-2 text-slate-600">
            –®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Ä–æ–∑–¥—ñ–ª—ñ–≤. –ü–æ–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ–≤ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å
            –¥–µ—Å—è—Ç–∫–æ–≤—ñ ¬´,¬ª/¬´.¬ª —Ç–∞ –º–∏—Ç—Ç—î–≤—ñ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–∏.
          </p>

          {/* Search + stats */}
          <div className="mt-6 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
            <div className="relative sm:w-[420px]">
              <input
                value={query}
                onChange={e => setQuery(e.target.value)}
                placeholder="–ü–æ—à—É–∫ —Ä–æ–∑–¥—ñ–ª—É –∞–±–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞‚Ä¶"
                className="w-full rounded-2xl border border-slate-200 bg-white px-4 py-3 pl-11 text-slate-900 placeholder:text-slate-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-4 focus:ring-blue-100"
                aria-label="–ü–æ—à—É–∫"
              />
              <span className="pointer-events-none absolute left-3 top-2.5 select-none text-xl">üîé</span>
            </div>

            <div className="text-sm text-slate-600">
              –†–æ–∑–¥—ñ–ª—ñ–≤: <span className="font-semibold text-slate-900">{total}</span>
              {query && (
                <>
                  {' ¬∑ '}–∑–Ω–∞–π–¥–µ–Ω–æ:{' '}
                  <span className="font-semibold text-slate-900">{filtered.length}</span>
                </>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* Grid */}
      <section className="mx-auto max-w-7xl px-6 py-8">
        {pinned.length > 0 && (
          <div className="mb-6">
            <div className="mb-3 text-sm font-semibold uppercase tracking-wide text-slate-500">
              –û–±—Ä–∞–Ω–µ
            </div>
            <Grid
              items={filtered.filter(c => pinned.includes(c.slug))}
              pinned={pinned}
              onPin={togglePin}
            />
          </div>
        )}

        <div className="mb-3 text-sm font-semibold uppercase tracking-wide text-slate-500">
          –£—Å—ñ —Ä–æ–∑–¥—ñ–ª–∏
        </div>
        <Grid items={filtered} pinned={pinned} onPin={togglePin} />
      </section>

      {/* Footer */}
      <footer className="border-t bg-white/60">
        <div className="mx-auto max-w-7xl px-6 py-6 text-sm text-slate-600">
          <div className="flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
            <p>
              –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –º–∞—é—Ç—å –¥–æ–≤—ñ–¥–∫–æ–≤–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä —ñ –Ω–µ –∑–∞–º—ñ–Ω—é—é—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –ª—ñ–∫–∞—Ä—è.
              –î–∞–Ω—ñ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ; ¬´–û–±—Ä–∞–Ω–µ¬ª ‚Äì –ª–∏—à–µ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ.
            </p>
            <p className="text-slate-700">
              <span className="font-semibold">–ü—Ä–∏–º—ñ—Ç–∫–∞.</span>{' '}
              –ë—ñ–±–ª—ñ–æ—Ç–µ–∫—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ –Ω–∞ –∫–∞—Ñ–µ–¥—Ä—ñ –Ω–µ—Ñ—Ä–æ–ª–æ–≥—ñ—ó —Ç–∞ –Ω–∏—Ä–∫–æ–≤–æ–∑–∞–º—ñ—Å–Ω–æ—ó —Ç–µ—Ä–∞–ø—ñ—ó
              –ù–£–û–ó –£–∫—Ä–∞—ó–Ω–∏ —ñ–º–µ–Ω—ñ –ü. –õ. –®—É–ø–∏–∫–∞.
            </p>
          </div>
        </div>
      </footer>
    </main>
  );
}

/** –ö–∞—Ä—Ç–∫–∏ + —Å—ñ—Ç–∫–∞ */
function Grid({
  items,
  pinned,
  onPin,
}: {
  items: Category[];
  pinned: string[];
  onPin: (slug: string) => void;
}) {
  return (
    <div className="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
      {items.map(cat => (
        <article
          key={cat.slug}
          className="group relative overflow-hidden rounded-2xl border border-slate-200 bg-white p-5 shadow-sm transition hover:shadow-md"
        >
          {/* Pin */}
          <button
            aria-label={pinned.includes(cat.slug) ? '–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –æ–±—Ä–∞–Ω–æ–≥–æ' : '–î–æ–¥–∞—Ç–∏ –≤ –æ–±—Ä–∞–Ω–µ'}
            onClick={e => {
              e.preventDefault();
              onPin(cat.slug);
            }}
            className={`absolute right-3 top-3 rounded-full border px-2 py-1 text-xs transition ${
              pinned.includes(cat.slug)
                ? 'border-amber-300 bg-amber-50 text-amber-700'
                : 'border-slate-200 bg-white text-slate-500 hover:bg-slate-50'
            }`}
          >
            {pinned.includes(cat.slug) ? '‚òÖ –û–±—Ä–∞–Ω–µ' : '‚òÜ –û–±—Ä–∞–Ω–µ'}
          </button>

          {/* Icon + title */}
          <div className="flex items-start gap-3">
            <div className={`flex h-11 w-11 items-center justify-center rounded-2xl ${cat.tint}`}>
              <span className="text-xl" aria-hidden>
                {cat.emoji}
              </span>
            </div>
            <div>
              <h2 className="text-lg font-semibold text-slate-900">{cat.title}</h2>
              <p className="text-sm text-slate-600">{cat.description}</p>
            </div>
          </div>

          <div className="mt-4 flex items-center justify-between">
            <Link
              href={`/${cat.slug}`}
              className="inline-flex items-center gap-2 rounded-xl bg-blue-600 px-3.5 py-2 text-sm font-medium text-white transition hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-200"
            >
              –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
              <span className="transition group-hover:translate-x-0.5">‚Üí</span>
            </Link>

            <span className="text-xs text-slate-500">/ {cat.slug}</span>
          </div>
        </article>
      ))}
    </div>
  );
}
